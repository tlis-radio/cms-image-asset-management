name: 'Build & Upload Dev Image'

on:
  push:
    branches: [ "develop" ]

env:
  ENVIRONMENT: 'development'
  AZURE_CONTAINER_REGISTRY: tliscr
  CONTAINER_NAME: cms-image-asset-management
  
jobs:
  build-container-and-push:
    name: 'Build container and push'
    uses: "./.github/workflows/build-and-push-image.yaml"
    with:
      acr_name: ${{ vars.CONTAINER_REGISTRY_NAME }}
      container_name: cms-image-asset-management
      environment: development
    secrets:
      CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
      CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
        
  build-helm-chart-and-push:
    name: 'Build helm chart and push to ACR'
    uses: "./.github/workflows/build-and-push-helm-chart.yaml"
    with:
      acr_name: ${{ vars.CONTAINER_REGISTRY_NAME }}
      container_name: cms-image-asset-management
      environment: development
    secrets:
      CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
      CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

  helm-chart-upgrade:
    environment: 'development'
    name: 'Upgrade helm chart'
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [build-container-and-push, build-helm-chart-and-push]
    steps:
    # install helm
    - name: 'Install helm'
      uses: Azure/setup-helm@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    # login to Azure
    - name: 'Azure login'
      uses: azure/login@v1.4.6
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    # set up kubelogin for non-interactive login
    - name: 'Set up kubelogin for non-interactive login'
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: 'v0.0.25'
    # get the k8s context
    - name: 'Get K8s context'
      uses: azure/aks-set-context@v3
      with:
        resource-group: K8s
        cluster-name: tlis-k8s
        admin: 'false'
        use-kubelogin: 'true'
    # login to Azure Container Registry
    - name: 'Login to acr using helm'
      run: |
        echo $ | helm registry login ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io --username ${{ secrets.CONTAINER_REGISTRY_USERNAME }} --password ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
    # upgrade the chart
    - name: 'Upgrade chart'
      run: |
        helm upgrade ${{ env.CONTAINER_NAME }} oci://${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/helm/${{ env.CONTAINER_NAME }} \
        --kube-context tlis-k8s \
        --version 1.0.0 \
        --install \
        --create-namespace --namespace cms-staging \
        --set config.connectionStrings.postgres="${{ secrets.POSTGRES_CONNECTION_STRING }}" \
        --set config.connectionStrings.storageAccount="${{ secrets.STORAGE_ACCOUNT_CONNECTION_STRING }}" \
        --set config.jwt.audience="${{ secrets.JWT_AUDIENCE }}" \
        --set config.jwt.authority="${{ secrets.JWT_AUTHORITY }}" \
        --set config.serviceUrls.storageAccount="${{ vars.SERVICE_URL_STORAGE_ACCOUNT }}" \
        --set-json 'config.imageProcessing=${{ vars.IMAGE_PROCESSING }}'